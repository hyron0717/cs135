;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname siblings) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))
;; Contrast:
;; num-siblings: Bst Num -> (Union Num false)

;; Purpose: find how many siblings n have
;; Example: 
;;(check-expect (num-siblings (list (list 1 2) 3 (list 4)) 3) 0)
;;(check-expect (num-siblings (list (list 1 2 3) (list (list 4 5 6))) 5) 2)
;;(check-expect (num-siblings (list (list 1 2 3) (list (list 4 5 6))) 9) false)

;; Definition:
(define (num-searcher abst n)
  (cond 
    [(empty? abst) false]
    [(cons? (first abst))
     (num-searcher (first abst) n)]
    [(and (number? (first abst)) 
          (= n (first abst)))
     abst]
    [else (num-searcher (rest abst) n)]))